"use strict";(()=>{var e={};e.id=4663,e.ids=[4663],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},92574:(e,o,t)=>{t.r(o),t.d(o,{headerHooks:()=>f,originalPathname:()=>h,patchFetch:()=>v,requestAsyncStorage:()=>p,routeModule:()=>g,serverHooks:()=>d,staticGenerationAsyncStorage:()=>c,staticGenerationBailout:()=>l});var r={};t.r(r),t.d(r,{GET:()=>u});var a=t(95419),n=t(69108),i=t(99678),s=t(6733);async function u(){if(s.Xd?.config?.apiKey?.toLowerCase()!=="huggingface")return Response.json("You are not using Huggingface as your provider.",{status:400});let e=s.Xd?.globalState?.config;return Response.json(e,{status:200})}let g=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/(providers)/huggingface/config/route",pathname:"/api/huggingface/config",filename:"route",bundlePath:"app/api/(providers)/huggingface/config/route"},resolvedPagePath:"/Users/danipower/Proyectos/Node/vscode-blog/codegpt-nextjs/app/api/(providers)/huggingface/config/route.ts",nextConfigOutput:"standalone",userland:r}),{requestAsyncStorage:p,staticGenerationAsyncStorage:c,serverHooks:d,headerHooks:f,staticGenerationBailout:l}=g,h="/api/(providers)/huggingface/config/route";function v(){return(0,i.patchFetch)({serverHooks:d,staticGenerationAsyncStorage:c})}},6733:(e,o,t)=>{t.d(o,{Xd:()=>a,ed:()=>n,vx:()=>r});let r=`http://localhost:${parseInt(process.env.PORT)+1}`,a={},n=e=>{a=e}},95419:(e,o,t)=>{e.exports=t(30517)}};var o=require("../../../../../webpack-runtime.js");o.C(e);var t=e=>o(o.s=e),r=o.X(0,[1638],()=>t(92574));module.exports=r})();