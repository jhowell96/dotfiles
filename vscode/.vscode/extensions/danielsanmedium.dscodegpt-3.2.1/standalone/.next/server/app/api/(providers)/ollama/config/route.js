"use strict";(()=>{var e={};e.id=9401,e.ids=[9401],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},32709:(e,o,t)=>{t.r(o),t.d(o,{headerHooks:()=>g,originalPathname:()=>m,patchFetch:()=>f,requestAsyncStorage:()=>u,routeModule:()=>l,serverHooks:()=>c,staticGenerationAsyncStorage:()=>d,staticGenerationBailout:()=>v});var a={};t.r(a),t.d(a,{GET:()=>p});var r=t(95419),s=t(69108),n=t(99678),i=t(6733);async function p(){if(i.Xd?.config?.apiKey?.toLowerCase()!=="ollama")return Response.json("You are not using Ollama as your provider.",{status:400});let e=i.Xd?.globalState?.config;return Response.json(e,{status:200})}let l=new r.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/(providers)/ollama/config/route",pathname:"/api/ollama/config",filename:"route",bundlePath:"app/api/(providers)/ollama/config/route"},resolvedPagePath:"/Users/danipower/Proyectos/Node/vscode-blog/codegpt-nextjs/app/api/(providers)/ollama/config/route.ts",nextConfigOutput:"standalone",userland:a}),{requestAsyncStorage:u,staticGenerationAsyncStorage:d,serverHooks:c,headerHooks:g,staticGenerationBailout:v}=l,m="/api/(providers)/ollama/config/route";function f(){return(0,n.patchFetch)({serverHooks:c,staticGenerationAsyncStorage:d})}},6733:(e,o,t)=>{t.d(o,{Xd:()=>r,ed:()=>s,vx:()=>a});let a=`http://localhost:${parseInt(process.env.PORT)+1}`,r={},s=e=>{r=e}},95419:(e,o,t)=>{e.exports=t(30517)}};var o=require("../../../../../webpack-runtime.js");o.C(e);var t=e=>o(o.s=e),a=o.X(0,[1638],()=>t(32709));module.exports=a})();